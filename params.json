{"name":"Playerjs","tagline":"canvas player","body":"# playerJs\r\ncanvas player\r\n\r\n>> 用canvas实现视频播放效果。当然，只能算是伪视频播放器，因为，它只是针对特定的数据格式。给每一个画图动作都赋予时间戳，一连贯的基于时间的画图动作呈现出来，再加上音频的同步播放，就有了视频播放的效果。\r\n\r\n![code Coverage](https://github.com/BPing/playerJs/blob/dev/res/%E6%95%88%E6%9E%9C%E5%9B%BE.png?raw=true)\r\n\r\n##<a name=\"index\"/>目录\r\n* [项目目录](#project_dir)\r\n* [兼容性](#project_compatibility)\r\n* [使用](#video_use)\r\n* [视频数据格式说明](#video_format)\r\n* [**](#**)\r\n\r\n\r\n##<a name=\"project_dir\"/>项目目录\r\n\r\n    playerJs/            --> \r\n      css/              --> css 文件 (*必须)\r\n        index.css         --> default stylesheet\r\n      res/              --> 资源文件，包括图片 (*必须)\r\n        close.png        --> \r\n        loading.gif      --> \r\n      src/              --> \r\n        coreJs.js        --> 核心代码。数据解析， 视频播放，音频播放等处理\r\n        playJs.js        --> ui控制代码。根据相应的动作更新页面和监控页面事件\r\n        utilJs.js        --> 通用工具类。\r\n      demo.json         --> 视频数据示例\r\n      example.html       --> 例子\r\n      player-*.min.js   --> 源码压缩代码。所有js压缩，所以，使用时引用此文件即可 (*必须)\r\n      video.html        --> 播放器html  (*必须)\r\n\r\n\r\n##<a name=\"project_compatibility\"/>兼容性\r\n\r\n> * 浏览器：IE9+  Edge12+  Chorme43+  firebox41+  Safari8+  Opera33+ <br>\r\n> * audio : mp3|wav  mp3 兼容性最好.<br>\r\n> * IE 不支持wav格式，但Edge支持。\r\n\r\n\r\n##<a name=\"video_use\"/>使用\r\n\r\n```javascript\r\n   \r\n   //html <script type=\"text/javascript\" src=\"XXX/player-0.9.min.js\"></script>\r\n\r\n    videoUI.startup({\r\n                  root: '../',  //此插件根目录\r\n                  url: '',  //视频数据来源\r\n                  volume: 50, //默认音量大小。0-100\r\n                  \"vw\": 600, //视口宽\r\n                  \"vh\": 400, //视口高\r\n                  \"cw\": 600, // 底层canvas宽\r\n                  \"ch\": 3200, // 底层canvas高\r\n              });\r\n  \r\n```\r\n\r\n##<a name=\"video_format\"/>视频数据格式说明\r\n\r\n![code Coverage](https://github.com/BPing/playerJs/blob/dev/res/size.png?raw=true)\r\n\r\n>>    视频trace的格式定义:\r\n>>\r\n>>    第一行: 屏幕尺寸|trace版本\r\n>>    \r\n>>    最后一行: 整个视频的时长.[毫秒]\r\n>>    \r\n>>    回放 Trace 条目的定义...\r\n>>    \r\n>>   timestamp&(userType|screenOffset|action|color|pointX|pointY|time|pressure)\r\n>>    \r\n>>    &(userType|screenOffset|action|color|pointX|pointY|time|pressure)\r\n>>\r\n>>单个条目详细解释如下:\r\n>>    \r\n>>    `timestamp` 当前操作的偏移时间[与连接开始的时间偏移], 由服务器设置\r\n>>    \r\n>>    userType 当前数据来源\r\n>>    \r\n>>    `action` Down(0)|Move(2)|Up(1)|Cancel(3)|SCREEN_JUMP(5)|Image(9) 其中括号内的是具体的值.\r\n>>\r\n>>    color(AARRGGBB) int 值,当前点的颜色\r\n>>    \r\n>>    `pointX` 当前点的X值\r\n>>    \r\n>>    `pointY` 当前点的Y值\r\n>>    \r\n>>    time 当前事件发生的时间\r\n>>    \r\n>>    pressure 当前事件的压力.\r\n>>\r\n>>    `screenOffset` 屏幕的偏移百分比, 相对于屏幕高度.[单屏高度为100]\r\n>>    \r\n>>    Note:\r\n>>    \r\n>>    关于 action 复用的定义如下.\r\n>>\r\n>>    当值为 [0,3] 时, 是正常的划线操作.\r\n>>\r\n>>    当值为 [5] 时, 是表示对屏幕的移动操作. 后面的字段全部不存在.\r\n>>\r\n>>    此时trace的格式为 `timestamp`|userType|`screenOffset`|`action`\r\n>>    \r\n>>    当值为 [9] 时, 是表示加入图片. 后面的字段全部不存在, 如果不够则继续添加.\r\n>>\r\n>>    格式如下: \r\n>>    \r\n>>    `图片名` * `pointX` * `pointY` * `模式mode` *  `屏幕索引screenIndex`|`图片名` * `pointX`  * `pointY` * `模式` * `屏幕索引`|`图片名` * `pointX` * `pointY` * `模式` * `屏幕索引`,\r\n>>    \r\n>>    图片的索引从1开始\r\n>>    \r\n>>    其中模式: [0: 铺满屏幕(最大一个页面)| 1: 按图片大小进行加载.(需根据屏幕比进行缩放)]\r\n\r\n[demo.json](https://github.com/BPing/playerJs/blob/dev/demo.json):\r\n```json\r\n{\r\n  \"responseNo\": 0,  //返回码\r\n  \r\n  \"videoData\": {  //视频数据\r\n  \r\n    \"imgPath\": \"./res/\",  //图片根目录\r\n    \r\n    \"audioUrl\": \"./res/Audio.mp3\",  //音频地址\r\n    \"screenSize\": {  //屏幕尺寸\r\n      \"w\": 150,\r\n      \"h\": 100\r\n    },\r\n\r\n    \"traceData\": [  //帧数据\r\n      {\r\n        \"timestamp\": 500,  //时间戳\r\n        \"data\": [         //具体画图动作\r\n          {\r\n            \"userType\": 1,\r\n            \"screenOffset\": 0, // 屏幕偏移。以页面值为100，也是一个视口的高度。 具体偏移量= (screenOffset/100)*view.heigth\r\n            \"action\": 9,   //画图片动作\r\n            \"imgName\": \"01201512021516100015.jpg\", //图片名字。图片地址=imgPath+imgName\r\n            \"pointX\": 0,  //画图起点X\r\n            \"pointY\": 0,  //画图起点Y\r\n            \"mode\": 1,    //0：铺满一页，1：按图片大小缩放。Notice：无论哪种模式，图片至多显示在一个页面上\r\n            \"screenIndex\": 0 //页面偏移量，相对整个页面。假如screenIndex=1，则表示此图画在第二个页面，以此类推。\r\n            //**Notice**：一个视口的大小就是一个页面大小。\r\n          }\r\n        ]\r\n      },\r\n      {\r\n      \"timestamp\": 1000, //时间戳\r\n        \"data\": [   //具体动作数据\r\n          {\r\n            \"userType\": 1,\r\n            \"screenOffset\": 0,\r\n            \"action\": 0,  //动作 0：按下画笔，2：画笔移动画线，1：移开画笔，停止画线\r\n            \"pointX\": 75,\r\n            \"pointY\": 60,\r\n          },\r\n          ]\r\n      }\r\n       {\r\n        \"timestamp\": 5500,\r\n        \"data\": [\r\n          {\r\n            \"userType\": 1,\r\n            \"screenOffset\": 0, //视口移动偏移量\r\n            \"action\": 5  //视口移动\r\n          }\r\n        ]\r\n      }\r\n     ],\r\n     \"duration\": 6000  //视频总时间长 单位：毫秒\r\n    //**Notice**：\"timestamp\" 相对视频始点的偏移时间戳，单位：毫秒\r\n   }\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}